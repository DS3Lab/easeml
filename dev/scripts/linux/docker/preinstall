#!/bin/sh

# Exit on error.
set -e

if [ "$(uname)" != "Linux" ]; then
    >&2 echo "This script can only be run on Linux systems."
    exit 1
fi

# Parametrize later.
TARGET_DIR=$PWD

if [ ! -d $TARGET_DIR ]; then
    >&2 echo "The target path $TARGET_DIR must be an existing directory."
    exit 1
elif [ ! -w $TARGET_DIR ]; then
    >&2 echo "The target directory $TARGET_DIR must be writeable."
    exit 1
fi

INSTRUCTIONS=

# uidmap dependency check.
if ! command -v newuidmap > /dev/null 2>&1 ; then
    if command -v apt-get > /dev/null 2>&1 ; then
        INSTRUCTIONS="apt-get install -y uidmap"
    elif command -v dnf > /dev/null 2>&1 ; then
        INSTRUCTIONS="dnf install -y shadow-utils"
    elif command -v yum > /dev/null 2>&1 ; then
        INSTRUCTIONS="curl -o /etc/yum.repos.d/vbatts-shadow-utils-newxidmap-epel-7.repo https://copr.fedorainfracloud.org/coprs/vbatts/shadow-utils-newxidmap/repo/epel-7/vbatts-shadow-utils-newxidmap-epel-7.repo
yum install -y shadow-utils46-newxidmap"
    else
        echo "The newuidmap binary not found. Please install with a package manager."
		exit 1
    fi
fi

# iptables dependency check
if ! command -v iptables >/dev/null 2>&1 && [ ! -f /sbin/iptables ] && [ ! -f /usr/sbin/iptables ]; then
    if command -v apt-get >/dev/null 2>&1 ; then
        INSTRUCTIONS="${INSTRUCTIONS}
apt-get install -y iptables"
    elif command -v dnf >/dev/null 2>&1 ; then
        INSTRUCTIONS="${INSTRUCTIONS}
dnf install -y iptables"
    else
        echo "iptables binary not found. Please install with a package manager."
        exit 1
    fi
fi

# ip_tables module dependency check
if ! lsmod | grep ip_tables >/dev/null 2>&1 && ! cat /lib/modules/$(uname -r)/modules.builtin | grep ip_tables >/dev/null 2>&1; then
        INSTRUCTIONS="${INSTRUCTIONS}
modprobe ip_tables"
fi

# debian requires setting unprivileged_userns_clone
if [ -f /proc/sys/kernel/unprivileged_userns_clone ]; then
    if [ "1" != "$(cat /proc/sys/kernel/unprivileged_userns_clone)" ]; then
        INSTRUCTIONS="${INSTRUCTIONS}
cat <<EOT > /etc/sysctl.d/50-rootless.conf
kernel.unprivileged_userns_clone = 1
EOT
sysctl --system"
    fi
fi

# centos requires setting max_user_namespaces
if [ -f /proc/sys/user/max_user_namespaces ]; then
    if [ "0" = "$(cat /proc/sys/user/max_user_namespaces)" ]; then
        INSTRUCTIONS="${INSTRUCTIONS}
cat <<EOT > /etc/sysctl.d/51-rootless.conf
user.max_user_namespaces = 28633
EOT
sysctl --system"
    fi
fi

if [ -n "$INSTRUCTIONS" ]; then
    echo "# Missing system requirements. Please run following commands to
# install the requirements and run this installer again.
# Alternatively iptables checks can be disabled with SKIP_IPTABLES=1"

    echo
    echo "cat <<EOF | sudo sh -x"
    echo "$INSTRUCTIONS"
    echo "EOF"
    echo
    exit 1
fi

