#!/bin/sh

# Constants.
readonly ROOT_EXEC_BASE_PATH="/var/run"                             # Transient data needs to be stored under /var/run.
readonly USER_EXEC_BASE_PATH="$ROOT_EXEC_BASE_PATH/user/$(id -u)"   # Non-root transient data is stored here.

set -x

# Local variables.
dest_path=$PWD
config_path=
arguments=
is_rootless=0

# Print the command usage info.
usage()
{
    echo "Usage: $0 [-d DEST_PATH] [-c CONFIG_PATH] [-a ARGUMENTS]"
    echo "Start a MongoDB instance and keep the persistent state in the given location."
    echo "All binaries need to be reachable by following the PATH variable."
    echo
    echo "Arguments:"
    echo " -d     Directory where the state of the daemon will be stored."
    echo " -c     Config file to use."
    echo " -a     String containing command line arguments to pass to the MongoDB daemon."
    exit 2
}

# Parse the arguments.
while getopts d:c: o
do case $o in
    d) dest_path=$(readlink -f $OPTARG) ;;
    c) config_path=$(readlink -f $OPTARG) ;;
    a) arguments=$(readlink -f $OPTARG) ;;
    h|?) usage ;;
esac done

# Computed properties.
[ $(id -u) -ne 0 ] && is_rootless=1
readonly DB_PATH=$dest_path/db
readonly LOG_PATH=$dest_path/daemon.log
readonly PID_PATH=$dest_path/mongod.pid
readonly HOST_PATH=$dest_path/mongod.host
readonly HOST=0.0.0.0

# Find first free port, srarting from 27017 (default mongodb port).
OCCUPIED_PORTS=$(netstat -lntu | grep ":[0-9]* " -o | grep [0-9]* -o | tr '\n' ' ')
port=27017
while echo $OCCUPIED_PORTS | grep "$port " -q; do
    port=$( expr $port + 1 )
done

# Ensure all directories exist.
mkdir -p $dest_path
mkdir -p $DB_PATH

# Find locations of commands.
cmd_mongod=$(command -v mongod)
if [ -z cmd_mongod ]; then
    >&2 echo "Cannot find mongod on PATH."
    exit 1
else
    echo "Using command:"
    echo "  $cmd_mongod"
    echo
fi

mongod_flags="--fork --pidfilepath $PID_PATH"

if [ -z "$config_path" ] || [ ! grep -q "port:" "$config_path" ]; then
    mongod_flags="$mongod_flags --port $port"
fi

if [ -z "$config_path" ] || [ ! grep -q "bindIp:" "$config_path" ]; then
    mongod_flags="$mongod_flags --bind_ip $HOST"
fi

if [ -z "$config_path" ] || [ ! grep -q "path:" "$config_path" ]; then
    mongod_flags="$mongod_flags --logpath $LOG_PATH"
fi

if [ -z "$config_path" ] || [ ! grep -q "dbPath:" "$config_path" ]; then
    mongod_flags="$mongod_flags --dbpath $DB_PATH"
fi

# Write out the host and port to a file. To be ignored if it was configured in the config file.
echo "$HOST:$port" >"$HOST_PATH"

# Show the final command.
echo "Running command:"
echo $cmd_mongod $mongod_flags $arguments

exec $cmd_mongod $mongod_flags $arguments
